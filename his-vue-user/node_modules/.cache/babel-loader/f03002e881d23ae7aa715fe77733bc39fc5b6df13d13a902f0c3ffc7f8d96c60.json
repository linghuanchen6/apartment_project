{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.keys.js\";\nexport default {\n  data: function data() {\n    return {\n      formData: {\n        username: '',\n        password: ''\n      },\n      formRules: {\n        username: [{\n          required: true,\n          message: '用户名',\n          trigger: 'blur'\n        }, {\n          max: 10,\n          message: '用户名长度不能超过10个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入登录密码',\n          trigger: 'blur'\n        }, {\n          max: 18,\n          message: '密码长度不能超过18个字符',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '请输入手机号',\n          trigger: 'blur'\n        }, {\n          max: 11,\n          message: '手机号长度不能超过11位',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          max: 11,\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          max: 20,\n          message: '请输入正确邮箱',\n          trigger: 'blur'\n        }]\n      },\n      currentUser: {},\n      remember: false\n    };\n  },\n  methods: {\n    registerU: function registerU() {\n      var _this = this;\n      this.$refs.formRef.validate(function (valid) {\n        if (valid) {\n          _this.$http.post('/api/server/register', _this.formData).then(function (res) {\n            if (res.data.status == 1) {\n              // this.currentUser = res.data.data.currentUser\n              // sessionStorage.setItem(\"currentUser\",JSON.stringify(this.currentUser))\n              _this.$router.push('/login');\n              _this.$router.go(0);\n              _this.$message.success(res.data.message);\n            } else {\n              _this.$message.error(res.data.message);\n            }\n          });\n        }\n      });\n    },\n    reset: function reset() {\n      this.formData = {};\n    }\n  },\n  mounted: function mounted() {\n    if (localStorage.getItem(\"currentUser\") != null) {\n      this.formData = JSON.parse(localStorage.getItem(\"currentUser\"));\n    }\n  }\n};","map":{"version":3,"names":["data","formData","username","password","formRules","required","message","trigger","max","phone","name","email","currentUser","remember","methods","registerU","_this","$refs","formRef","validate","valid","$http","post","then","res","status","$router","push","go","$message","success","error","reset","mounted","localStorage","getItem","JSON","parse"],"sources":["src/views/data/Register.vue"],"sourcesContent":["<template>\r\n    <el-container id=\"body\">\r\n    <el-main>\r\n    <div>\r\n        <el-form :model=\"formData\" :rules=\"formRules\" ref=\"formRef\">\r\n            <h3>用户注册</h3>\r\n            <el-form-item prop=\"name\">\r\n                <el-input v-model=\"formData.name\" placeholder=\"请输入姓名\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"username\">\r\n                <el-input v-model=\"formData.username\" placeholder=\"请输入用户名\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"password\">\r\n                <el-input v-model=\"formData.password\" placeholder=\"请输入密码\" show-password></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"phone\">\r\n                <el-input v-model=\"formData.phone\" placeholder=\"请输入电话号\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"email\">\r\n                <el-input v-model=\"formData.email\" placeholder=\"请输入邮箱\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-button type=\"primary\" @click=\"registerU\">注册</el-button>\r\n            <el-button type=\"warning\" @click=\"reset\">重置</el-button>\r\n        </el-form>\r\n    </div>\r\n</el-main>\r\n</el-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n    data() {\r\n\r\n        return {\r\n            formData: {\r\n                username: '',\r\n                password: '',\r\n            },\r\n            formRules: {\r\n                username: [\r\n                    { required: true, message: '用户名', trigger: 'blur' },\r\n                    { max: 10, message: '用户名长度不能超过10个字符', trigger: 'blur' }\r\n                ],\r\n                password: [\r\n                    { required: true, message: '请输入登录密码', trigger: 'blur' },\r\n                    { max: 18, message: '密码长度不能超过18个字符', trigger: 'blur' }\r\n                ],\r\n                phone: [\r\n                    { required: true, message: '请输入手机号', trigger: 'blur' },\r\n                    { max: 11, message: '手机号长度不能超过11位', trigger: 'blur' }\r\n                ],\r\n                name: [\r\n                    { required: true, message: '请输入用户名', trigger: 'blur' },\r\n                    { max: 11, trigger: 'blur' }\r\n                ],\r\n                email: [\r\n                    { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n                    { max: 20, message: '请输入正确邮箱', trigger: 'blur' }\r\n                ],\r\n            },\r\n            currentUser: {},\r\n            remember: false,\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        registerU() {\r\n            this.$refs.formRef.validate(\r\n                valid => {\r\n                    if (valid) {\r\n                        this.$http.post('/api/server/register', this.formData).then(\r\n                            res => {\r\n                                if (res.data.status == 1) {\r\n                                    // this.currentUser = res.data.data.currentUser\r\n                                    // sessionStorage.setItem(\"currentUser\",JSON.stringify(this.currentUser))\r\n                                    this.$router.push('/login')\r\n                                    this.$router.go(0)\r\n                                    this.$message.success(res.data.message)\r\n                                } else {\r\n                                    this.$message.error(res.data.message)\r\n                                }\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        },\r\n        reset() {\r\n            this.formData = {}\r\n        }\r\n\r\n    },\r\n\r\n\r\n\r\n\r\n    mounted() {\r\n        if (localStorage.getItem(\"currentUser\") != null) {\r\n            this.formData = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#body {\r\n    background-image: url(\"@/assets/image/front1.png\");\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n.el-form {\r\n    width: 300px;\r\n    margin: 40px auto;\r\n    padding: 20px;\r\n    border-radius: 15px;\r\n    box-shadow: 0px 0px 20px lightgray;\r\n    text-align: center;\r\n}\r\n</style>"],"mappings":";;AA+BA;EAEAA,IAAA,WAAAA,KAAA;IAEA;MACAC,QAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,SAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAE,KAAA,GACA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAG,IAAA,GACA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAD,OAAA;QAAA,EACA;QACAI,KAAA,GACA;UAAAN,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAK,WAAA;MACAC,QAAA;IACA;EACA;EAEAC,OAAA;IACAC,SAAA,WAAAA,UAAA;MAAA,IAAAC,KAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CACA,UAAAC,KAAA;QACA,IAAAA,KAAA;UACAJ,KAAA,CAAAK,KAAA,CAAAC,IAAA,yBAAAN,KAAA,CAAAf,QAAA,EAAAsB,IAAA,CACA,UAAAC,GAAA;YACA,IAAAA,GAAA,CAAAxB,IAAA,CAAAyB,MAAA;cACA;cACA;cACAT,KAAA,CAAAU,OAAA,CAAAC,IAAA;cACAX,KAAA,CAAAU,OAAA,CAAAE,EAAA;cACAZ,KAAA,CAAAa,QAAA,CAAAC,OAAA,CAAAN,GAAA,CAAAxB,IAAA,CAAAM,OAAA;YACA;cACAU,KAAA,CAAAa,QAAA,CAAAE,KAAA,CAAAP,GAAA,CAAAxB,IAAA,CAAAM,OAAA;YACA;UACA,CACA;QACA;MACA,CACA;IACA;IACA0B,KAAA,WAAAA,MAAA;MACA,KAAA/B,QAAA;IACA;EAEA;EAKAgC,OAAA,WAAAA,QAAA;IACA,IAAAC,YAAA,CAAAC,OAAA;MACA,KAAAlC,QAAA,GAAAmC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}